// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

model User {
  id            String        @id @default(cuid())
  name          String
  email         String        @unique
  emailVerified DateTime?
  role          String        @default("STUDENT")

  // Relations
  courses       Course[]      @relation("InstructorCourses")
  enrollments   Enrollment[]
  submissions   Submission[]
  feedbacks     Feedback[]
}

model Course {
  id           String        @id @default(cuid())
  title        String
  description  String?
  instructor   User          @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId String
  assignments  Assignment[]
  enrollments  Enrollment[]
  createdAt    DateTime      @default(now())
}

model Enrollment {
  id       String   @id @default(cuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  course   Course   @relation(fields: [courseId], references: [id])
  courseId String
  role     String     // e.g. STUDENT, TA
}

model Assignment {
  id          String       @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  course      Course       @relation(fields: [courseId], references: [id])
  courseId    String     //not optional      
  submissions Submission[]
}

model Submission {
  id           String       @id @default(cuid())
  content      String
  type         SubmissionType
  createdAt    DateTime     @default(now())
  student      User         @relation(fields: [studentId], references: [id])
  studentId    String
  assignment   Assignment   @relation(fields: [assignmentId], references: [id])
  assignmentId String
  feedbacks    Feedback[]

  // Unique feature: code sandbox link
  sandboxUrl   String?
}

model Feedback {
  id           String     @id @default(cuid())
  comment      String
  grade        Int?
  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId String
  instructor   User       @relation(fields: [instructorId], references: [id])
  instructorId String
  createdAt    DateTime   @default(now())
}


enum SubmissionType {
  FILE
  TEXT
  VIDEO
  SANDBOX // unique feature
}